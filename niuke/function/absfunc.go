package function

import (
	"fmt"
)

/**
 * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
 *
 *
 * @param x int整型
 * @return int整型
 */
func absfunc(x int) int {
	// write code here
	// 方案1
	// fmt.Print()
	// return int(math.Abs(float64(x)))

	// 方案2
	if x < 0 {
		return x * -1
	}
	return x
}

func ExecAbsfunc() {
	params := -1
	fmt.Println(absfunc(params))
}

// 描述

// 定义一个函数，函数的功能是给出一个数，返回该数的绝对值。

// 知识点：

// 函数的定义： 函数声明包含一个函数名，参数列表， 返回值列表和函数体。如果函数没有返回值，则返回列表可以省略。函数从第一条语句开始执行，直到执行return语句或者执行函数的最后一条语句。函数可以没有参数或接受多个参数。注意类型在变量名之后 。当两个或多个连续的函数命名参数是同一类型，则除了最后一个类型之外，其他都可以省略。函数可以返回任意数量的返回值。使用关键字 func 定义函数，左大括号依旧不能另起一行。func function_name( [parameter list] ) [return_types] {
//    函数体
// }

// 函数的调用：当创建函数时，你定义了函数需要做什么，通过调用该函数来执行指定任务。调用函数，向函数传递参数，并返回值

// Go 函数可以返回多个值，"_"标识符，用来忽略函数的某个返回值Go 的返回值可以被命名，并且就像在函数体开头声明的变量那样使用。返回值的名称应当具有一定的意义，可以作为文档使用。没有参数的 return 语句返回各个返回变量的当前值。
// 示例1

// 输入：
// -1
// 复制
// 返回值：
